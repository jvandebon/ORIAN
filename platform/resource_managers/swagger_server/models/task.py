# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Task(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, task_name: str=None, objectives: object=None, problem_size: int=None):  # noqa: E501
        """Task - a model defined in Swagger

        :param task_name: The task_name of this Task.  # noqa: E501
        :type task_name: str
        :param objectives: The objectives of this Task.  # noqa: E501
        :type objectives: object
        :param problem_size: The problem_size of this Task.  # noqa: E501
        :type problem_size: int
        """
        self.swagger_types = {
            'task_name': str,
            'objectives': object,
            'problem_size': int
        }

        self.attribute_map = {
            'task_name': 'taskName',
            'objectives': 'objectives',
            'problem_size': 'problemSize'
        }

        self._task_name = task_name
        self._objectives = objectives
        self._problem_size = problem_size

    @classmethod
    def from_dict(cls, dikt) -> 'Task':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The task of this Task.  # noqa: E501
        :rtype: Task
        """
        return util.deserialize_model(dikt, cls)

    @property
    def task_name(self) -> str:
        """Gets the task_name of this Task.


        :return: The task_name of this Task.
        :rtype: str
        """
        return self._task_name

    @task_name.setter
    def task_name(self, task_name: str):
        """Sets the task_name of this Task.


        :param task_name: The task_name of this Task.
        :type task_name: str
        """

        self._task_name = task_name

    @property
    def objectives(self) -> object:
        """Gets the objectives of this Task.


        :return: The objectives of this Task.
        :rtype: object
        """
        return self._objectives

    @objectives.setter
    def objectives(self, objectives: object):
        """Sets the objectives of this Task.


        :param objectives: The objectives of this Task.
        :type objectives: object
        """

        self._objectives = objectives

    @property
    def problem_size(self) -> int:
        """Gets the problem_size of this Task.


        :return: The problem_size of this Task.
        :rtype: int
        """
        return self._problem_size

    @problem_size.setter
    def problem_size(self, problem_size: int):
        """Sets the problem_size of this Task.


        :param problem_size: The problem_size of this Task.
        :type problem_size: int
        """

        self._problem_size = problem_size
